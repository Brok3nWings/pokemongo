networks:
  pokemon_network:
    driver: bridge

services:
  db:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - pokemon_network
    ports:
      - "27018:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 10s
      retries: 5
      start_period: 5s

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pokemon_network
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: db
    ports:
      - "8081:8081"

  app:
    build: ./app
    container_name: pokemon-container
    restart: always
    depends_on:
      db:
        condition: service_healthy
    networks:
      - pokemon_network
    env_file:
      - ./app/.env
    ports:
      - "3000:3000"
    volumes:
      - ./app:/usr/src/app
      - /usr/src/app/node_modules
    command: npm start

volumes:
  mongo-data: 